<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             x:Class="ReactorControl.Views.PumpControl">
	<UserControl.Styles>
		<Style Selector="TextBlock">
			<Setter Property="VerticalAlignment" Value="Center"></Setter>
			<Setter Property="Margin" Value="3,0"></Setter>
		</Style>
		<Style Selector="TextBlock.name">
			<Setter Property="HorizontalAlignment" Value="Right"></Setter>
		</Style>
		<Style Selector="TextBlock.unit">
			<Setter Property="HorizontalAlignment" Value="Left"></Setter>
		</Style>
		<Style Selector="TextBox">
			<Setter Property="Margin" Value="3"></Setter>
		</Style>
		<Style Selector="TextBlock.value">
			<Setter Property="Margin" Value="5,1"/>
		</Style>
	</UserControl.Styles>
	<HeaderedContentControl VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" Grid.Column="1" Grid.Row="0"
							Header="{Binding IndexString}">
		<Grid ColumnDefinitions="auto, *, auto" RowDefinitions="auto,auto,auto,auto,auto,auto,auto,auto,auto">
			<TextBlock Grid.Column="0" Grid.Row="0" Classes="name">Status:</TextBlock>
			<TextBlock Grid.Column="1" Grid.Row="0" Background="{Binding StatusColor}"
					   Text="{Binding StatusString}" Padding="3"></TextBlock>
			<Button Grid.Column="2" Content="[0]" IsEnabled="{Binding CanEdit}" x:Name="btnZero"
				HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Margin="3" Padding="0"
				VerticalContentAlignment="Center" Background="LightSalmon"></Button>
			<TextBlock Grid.Column="0" Grid.Row="1" Classes="name">Set rate:</TextBlock>
			<TextBox Grid.Column="1" Grid.Row="1" Text="{Binding CommandedSpeed}" KeyDown="Commanded_KeyDown"
					 IsReadOnly="{Binding !CanEdit}" x:Name="txtCommanded" Background="{Binding CommandedColor}"></TextBox>
			<TextBlock Grid.Column="2" Grid.Row="1" Classes="unit" Text="{Binding VolumeRateUnit}">mL/s</TextBlock>
			<TextBlock Grid.Column="0" Grid.Row="2" Classes="name">Actual rate:</TextBlock>
			<TextBlock Grid.Column="1" Grid.Row="2" Classes="value" Text="{Binding VolumeRate}"></TextBlock>
			<TextBlock Grid.Column="2" Grid.Row="2" Classes="unit" Text="{Binding VolumeRateUnit}">mL/s</TextBlock>
			<TextBlock Grid.Column="0" Grid.Row="3" Classes="name">Rotation speed:</TextBlock>
			<TextBlock Grid.Column="1" Grid.Row="3" Classes="value" Text="{Binding RotationSpeed}"></TextBlock>
			<TextBlock Grid.Column="2" Grid.Row="3" Classes="unit">Hz</TextBlock>
			<CheckBox Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="4" HorizontalAlignment="Center"
					 IsEnabled="{Binding CanChangeTimerMode}" x:Name="chkEnableTimer" Padding="10,0"
					 Click="EnableTimer_Click" IsChecked="{Binding TimerEnabled, Mode=OneWay}">
					 Enable Timer
					 </CheckBox>
			<Button Grid.Column="2" Grid.Row="4" Content="Go" IsEnabled="{Binding CanEdit}" x:Name="btnGo"
				HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Margin="3" Padding="0"
				VerticalContentAlignment="Center" Background="LightGreen"
				IsVisible="{Binding TimerEnabled}" Click="BtnGo_Click"></Button>
			<TextBlock Grid.Column="0" Grid.Row="5" Classes="name"
				IsVisible="{Binding TimerEnabled}">Pumping time:</TextBlock>
			<TextBox Grid.Column="1" Grid.Row="5" Text="{Binding CommandedTime}" KeyDown="CommandedTime_KeyDown"
					 IsReadOnly="{Binding !CanEdit}" x:Name="txtCommandedTime" Background="{Binding CommandedColor}"
					 IsVisible="{Binding TimerEnabled}"></TextBox>
			<TextBlock Grid.Column="2" Grid.Row="5" Classes="unit"
				IsVisible="{Binding TimerEnabled}">s</TextBlock>
			<TextBlock Grid.Column="0" Grid.Row="6" Classes="name"
				IsVisible="{Binding TimerEnabled}">Volume:</TextBlock>
			<TextBox Grid.Column="1" Grid.Row="6" Text="{Binding CommandedVolume}" KeyDown="CommandedVolume_KeyDown"
					 IsReadOnly="{Binding !CanEdit}" x:Name="txtCommandedVolume" Background="{Binding CommandedColor}"
					 IsVisible="{Binding TimerEnabled}"></TextBox>
			<TextBlock Grid.Column="2" Grid.Row="6" Classes="unit" Text="{Binding VolumeUnit}"
				IsVisible="{Binding TimerEnabled}">mL</TextBlock>
			<TextBlock Grid.Column="0" Grid.Row="7" Classes="name"
				IsVisible="{Binding TimerEnabled}">Time left:</TextBlock>
			<TextBlock Grid.Column="1" Grid.Row="7" Classes="value" Text="{Binding TimeLeft}"
				IsVisible="{Binding TimerEnabled}"></TextBlock>
			<TextBlock Grid.Column="2" Grid.Row="7" Classes="unit"
				IsVisible="{Binding TimerEnabled}">s</TextBlock>
			<TextBlock Grid.Column="0" Grid.Row="8" Classes="name"
				IsVisible="{Binding TimerEnabled}">Volume left:</TextBlock>
			<TextBlock Grid.Column="1" Grid.Row="8" Classes="value" Text="{Binding VolumeLeft}"
				IsVisible="{Binding TimerEnabled}"></TextBlock>
			<TextBlock Grid.Column="2" Grid.Row="8" Classes="unit" Text="{Binding VolumeUnit}"
				IsVisible="{Binding TimerEnabled}">mL</TextBlock>
		</Grid>
	</HeaderedContentControl>
</UserControl>
